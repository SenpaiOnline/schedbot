name: Builds an uberjar and push it into ghcr, also creates a new release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-uberjar:
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: temurin

      - uses: gradle/wrapper-validation-action@v1.0.4

      - name: Get version
        id: version
        run: echo "::set-output name=version::$(./gradlew version -q --no-daemon)"

      - name: Build an uberjar using shadowjar plugin
        run: ./gradlew shadowJar --no-daemon

      - name: Archive the resulting jar
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.version.outputs.version }}
          path: build/libs/*.jar
          if-no-files-found: error

  build-and-push-oci-image:
    runs-on: ubuntu-20.04
    needs:
      - build-uberjar
    steps:
      - name: Download the jar
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-uberjar.outputs.version }}

      - name: Rename the jar
        run: mv *.jar schedbot.jar

      - name: Build an image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          base-image: docker.io/bellsoft/liberica-openjre-alpine:11.0.12-7
          image: schedbot
          oci: true
          tags: latest ${{ needs.build-uberjar.outputs.version }}
          workdir: /app
          content: |
            schedbot.jar
          entrypoint: java -jar schedbot.jar

      - name: Push to ghcr.io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

  create-release-on-github:
    runs-on: ubuntu-20.04
    needs:
      - build-uberjar
    steps:
      - name: Download the jar
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-uberjar.outputs.version }}

      - name: Create a new release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ github.token }}
          automatic_release_tag: ${{ needs.build-uberjar.outputs.version }}
          prerelease: false
          title: ${{ github.token }}
          files: |
            *.jar
